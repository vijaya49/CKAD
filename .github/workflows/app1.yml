name: Smart Docker Build and Push

on:
  push:
    branches: [main]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed_apps: ${{ steps.filter.outputs.changed_apps }}
      has_changes: ${{ steps.filter.outputs.has_changes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Important for git diff to work properly

      - name: Detect changed app folders
        id: filter
        run: |
          echo "🧠 Running git diff HEAD^ HEAD..."
          git diff --name-only HEAD^ HEAD > diff.txt
          cat diff.txt

          changed_files=$(cat diff.txt)

          changed_apps=$(echo "$changed_files" | grep '^EKS/app[0-9]\+/' | cut -d '/' -f2 | sort -u | jq -R -s -c 'split("\n") | map(select(. != ""))')
          
          # Safety fallback
          if [ -z "$changed_apps" ] || [ "$changed_apps" = "null" ]; then
            changed_apps="[]"
          fi

          echo "🔍 Changed apps: $changed_apps"

          has_changes="false"
          if [ "$changed_apps" != "[]" ]; then
            has_changes="true"
          fi

          echo "changed_apps=$changed_apps" >> $GITHUB_OUTPUT
          echo "has_changes=$has_changes" >> $GITHUB_OUTPUT

  build-and-push:
    needs: detect-changes
    if: needs.detect-changes.outputs.has_changes == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ${{ fromJson(needs.detect-changes.outputs.changed_apps) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and tag image for ${{ matrix.app }}
        run: |
          echo "🔨 Building app: ${{ matrix.app }}"
          docker build -t ${{ matrix.app }}:${{ github.sha }} ./EKS/${{ matrix.app }}
          docker tag ${{ matrix.app }}:${{ github.sha }} ${{ secrets.ECR_REGISTRY }}/${{ matrix.app }}:latest
          docker tag ${{ matrix.app }}:${{ github.sha }} ${{ secrets.ECR_REGISTRY }}/${{ matrix.app }}:${{ github.sha }}

      - name: Push image for ${{ matrix.app }}
        run: |
          echo "📤 Pushing ${{ matrix.app }} to ECR"
          docker push ${{ secrets.ECR_REGISTRY }}/${{ matrix.app }}:latest
          docker push ${{ secrets.ECR_REGISTRY }}/${{ matrix.app }}:${{ github.sha }}
